{
  "scopeName": "text.html.trixytpl",
  "injectionSelector": "L:text.html", 
  "repository": {
    "numbers": {
      "patterns": [
        { 
          "name": "constant.numeric.trixytpl", 
          "match": "\\b\\d+(?:\\.\\d+)?\\b"
        } 
      ]
    },
    "comments": {
      "patterns": [
        { 
          "name": "comment.block.trixytpl", 
          "match": "<!--.*?-->"
        } 
      ]
    },
    "strings": {
      "patterns": [
        { 
          "name": "string.trixytpl", 
          "match": "([\"'])(?:\\\\.|(?!\\1).)*\\1"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.trixytpl",
          "match": "=>|===|!==|!=|==|=|<=|>=|<|>|\\+|-|\\*|\\/|%|\\|\\||\\&\\&|\\||as"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
        "name": "variable.other.trixytpl",
        "match": "([a-zA-Z_]\\w*(?:\\.[a-zA-Z_0-9]\\w*)*)\\s*"
        }
      ]
    },
    "filters": {
      "patterns": [
        {
          "name": "entity.name.function.filter.trixytpl",
          "match": "(\\|)\\s*(\\w+(?:\\([^\\)]*\\))?)",
          "captures":{
            "1": {
              "name": "keyword.operator.trixytpl"
            }
          }
        }
      ]
    },
    "separators": {
      "patterns": [
        {
          "name": "punctuation.separator.parameter.trixytpl",
          "match": ","
        }
      ]
    }
  },
  "patterns": [
    { "include": "text.html.basic" }, 
    {
      "begin": "\\[\\s*for\\s+",
      "beginCaptures": {
        "0": { "name": "keyword.control.for.trixytpl.command.loop" }
      },
      "end": "\\{",
      "patterns": [
        { "include": "#numbers" },
        { "include": "#strings" },
        { "include": "#comments" },
        { "include": "#variables" }
      ]
    },
    {
      "begin": "\\[\\s*foreach\\s+",
      "beginCaptures": {
        "0": { "name": "keyword.control.foreach.trixytpl.command.loop" }
      },
      "end": "\\{",
      "patterns": [
        { "include": "#strings" },
        { "include": "#comments" },
        { "include": "#operators" },
        { "include": "#variables" }
      ]
    },
    {
      "begin": "\\[\\s*if\\s*\\(",
      "beginCaptures": {
        "0": { "name": "keyword.control.if.trixytpl.command.conditional" }
      },
      "end": "\\)\\s*{",
      "patterns": [
        { "include": "#numbers" },
        { "include": "#strings" },
        { "include": "#comments" },
        { "include": "#operators" },
        { "include": "#variables" }
      ]
    },
    {
      "begin": "\\[\\s*else\\s*if\\s*\\(",
      "beginCaptures": {
        "0": { "name": "keyword.control.elseif.trixytpl.command.conditional" }
      },
      "end": "\\)\\s*{",
      "patterns": [
        { "include": "#numbers" },
        { "include": "#strings" },
        { "include": "#comments" },
        { "include": "#operators" },
        { "include": "#variables" }
      ]
    },
    {
      "name": "keyword.control.else.trixytpl.command.conditional",
      "match": "\\[\\s*else\\s*{"
    },
    {
      "begin": "\\[\\s*require\\s+",
      "beginCaptures": {
        "0": { "name": "keyword.control.require.trixytpl.command" }
      },
      "end": "\\]",
      "patterns": [
        { "include": "#strings" },
        { "include": "#comments" },
        { "include": "#variables" }
      ]
    },
    {
      "begin": "\\[\\s*str_filter\\s*\\(",
      "beginCaptures": {
        "0": { "name": "keyword.control.filter.trixytpl.command" }
      },
      "end": "\\)\\s*\\]",
      "patterns": [
        { "include": "#strings" },
        { "include": "#comments" },
        { "include": "#variables" },
        { "include": "#separators" }
      ]
    },
    {
    "begin":"\\{",
    "beginCaptures":{"0":{"name":"punctuation.section.block.begin.trixytpl"}},
    "end":"\\}",
    "endCaptures":{"0":{"name":"punctuation.section.block.end.trixytpl"}},
    "patterns":[
      {"include":"#strings"},
      {"include":"#comments"},
      {"include":"#filters"},
      {"include":"#variables"},
      {"include":"#separators"}
    ]
  },
    {
      "name": "punctuation.section.delimiter.trixytpl",
      "match": "(\\{)|(\\})|(\\[)|(\\])|(\\()|(\\))",
      "captures": {
        "1": { "name": "punctuation.section.block.begin.trixytpl" },
        "2": { "name": "punctuation.section.block.end.trixytpl" },
        "3": { "name": "punctuation.section.bracket.begin.trixytpl" },
        "4": { "name": "punctuation.section.bracket.end.trixytpl" },
        "5": { "name": "punctuation.section.parens.begin.trixytpl" },
        "6": { "name": "punctuation.section.parens.end.trixytpl" }
      }
    },
    { 
      "include": "#numbers" 
    },
    { 
      "include": "#strings" 
    },
    { 
      "include": "#comments" 
    },
    { 
      "include": "#operators" 
    }
  ]
}